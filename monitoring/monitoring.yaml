---
apiVersion: v1
data: 
  dashboards.yaml: |
    apiVersion: 1
    providers:
     - name: 'dev'
       #orgId: 1
       folder: 'Dev'
       #folderUid: ''
       type: file
       options:
         path: /var/lib/grafana/dashboards/dev.json
     - name: 'test'
       #orgId: 1
       folder: 'Test'
       #folderUid: ''
       type: file
       options:
         path: /var/lib/grafana/dashboards/test.json
     - name: 'prod'
       #orgId: 1
       folder: 'Prod'
       #folderUid: ''
       type: file
       options:
         path: /var/lib/grafana/dashboards/prod.json       
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: monitoring 

---
apiVersion: v1
data: 
  prometheus.yaml: |
    apiVersion: 1
    datasources:
     - name: Prometheus
       type: prometheus
       access: proxy
       url: http://prometheus:9090
       version: 1
       editable: false
    readOnly: false       
kind: ConfigMap
metadata:
  name: grafana-prometheus
  namespace: monitoring        

---
apiVersion: v1
data: 
  prometheus.yaml: |
    scrape_configs:
      - job_name: 'Registration Service (DEV)'
        metrics_path: '/actuator/prometheus'
        scrape_interval: 2s
        static_configs:
          - targets: ['registration.dev.svc.cluster.local:8080']
            labels:
              application: 'Registration Service in the Dev Environment'
      - job_name: 'Summary Service (DEV)'
        metrics_path: '/actuator/prometheus'
        scrape_interval: 2s
        static_configs:
          - targets: ['summary.dev.svc.cluster.local:8081']
            labels:
              application: 'Summary Service in the Dev Environment'
      - job_name: 'Registration Service (Test)'
        metrics_path: '/actuator/prometheus'
        scrape_interval: 2s
        static_configs:
          - targets: ['registration.test.svc.cluster.local:8080']
            labels:
              application: 'Registration Service in the Test Environment'
      - job_name: 'Summary Service (Test)'
        metrics_path: '/actuator/prometheus'
        scrape_interval: 2s
        static_configs:
          - targets: ['summary.test.svc.cluster.local:8081']
            labels:
              application: 'Summary Service in the Test Environment'
      - job_name: 'Registration Service (Prod)'
        metrics_path: '/actuator/prometheus'
        scrape_interval: 2s
        static_configs:
          - targets: ['registration.prod.svc.cluster.local:8080']
            labels:
              application: 'Registration Service in the Prod Environment'
      - job_name: 'Summary Service (Prod)'
        metrics_path: '/actuator/prometheus'
        scrape_interval: 2s
        static_configs:
          - targets: ['summary.prod.svc.cluster.local:8081']
            labels:
              application: 'Summary Service in the Prod Environment'              
kind: ConfigMap
metadata:
  name: prometheus
  namespace: monitoring
  
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: grafana
  name: grafana
  namespace: monitoring
spec:
  containers:
  - env:
    - name: GF_PATHS_PROVISIONING
      value: /usr/share/grafana/conf/provisioning
    - name: GF_SECURITY_ADMIN_PASSWORD
      value: admin
    - name: GF_INSTALL_PLUGINS
      value: yesoreyeram-infinity-datasource  
    image: grafana/grafana:latest
    name: grafana
    ports:
    - containerPort: 3000
    resources: {}
    volumeMounts:
    - name: prometheus
      mountPath: /usr/share/grafana/conf/provisioning/datasources/prometheus.yaml
      subPath: prometheus.yaml  
    - name: dev-dashboard
      mountPath: /var/lib/grafana/dashboards/dev.json
      subPath: dev.json
    - name: test-dashboard
      mountPath: /var/lib/grafana/dashboards/test.json
      subPath: test.json
    - name: prod-dashboard
      mountPath: /var/lib/grafana/dashboards/prod.json
      subPath: prod.json     
    - name: dashboards
      mountPath: usr/share/grafana/conf/provisioning/dashboards/dashboards.yaml
      subPath: dashboards.yaml  
  dnsPolicy: ClusterFirst
  restartPolicy: Always
  volumes:
  - name: prometheus
    configMap:
      name: grafana-prometheus
  - name: dashboards
    configMap:
      name: grafana-dashboards    
  - name: dev-dashboard
    configMap:
      name: dev-dashboard
  - name: test-dashboard
    configMap:
      name: test-dashboard
  - name: prod-dashboard
    configMap:
      name: prod-dashboard     
  
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: prometheus
  name: prometheus
  namespace: monitoring
spec:
  containers:
  - image: prom/prometheus:v2.35.0
    name: prometheus
    ports:
    - containerPort: 9090
    args: ["--config.file", "/etc/prometheus/prometheus.yaml"]
    volumeMounts:
    - name: prometheus
      mountPath: /etc/prometheus/prometheus.yaml
      subPath: prometheus.yaml
  dnsPolicy: ClusterFirst
  restartPolicy: Always
  volumes:
  - name: prometheus
    configMap:
      name: prometheus
      
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: prometheus
  name: prometheus
  namespace: monitoring
spec:
  ports:
  - port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    run: prometheus
status:
  loadBalancer: {}      